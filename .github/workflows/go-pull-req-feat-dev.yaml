# name: Go Unit Test

# on:
#   pull_request:
#     branches:
#       - develop

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Setup Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: '1.20'

      # - name: Set color
      #   id: random-color-generator
      #   run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
        
      # - name: Get color
      #   run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"

      # - name: List changed files
      #   id: list_files
      #   run: |
      #     api_url=$(jq -r .pull_request.url $GITHUB_EVENT_PATH)
      #     changed_files=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $api_url/files | jq -r '.[].filename')
      #     echo "Changed files:"
      #     echo "$changed_files"
      #     IFS=$'\n' read -rd '' -a changed_files_array <<< "$changed_files"
      # - name: Install dependencies
      #   run: go get .

      # - name: Build
      #   run: go build -v ./...

      # - name: Test with Coverage
      #   run: go test -v -coverprofile=coverage_dev.txt -covermode=atomic ./...

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: coverage_dev.txt
      #     token: ${{ secrets.CODECOV_TOKEN }}


name: Get File Changes
on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  file-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get File Changes
        uses: tj-actions/changed-files@v36
        id: file-changes
        with:
          compareWith: develop
  
      - name: List all changed files
        run: |
          for file in "${{ steps.file-changes.outputs.all_changed_files }}"; do
            if [[ $file == *_test.go ]]; then
              file=${file%/*}   # Remove "/book_test.go" portion
              echo "Changed file: $file"
              if [[ ! "${changed_files[*]}" =~ $file ]]; then
                changed_files+=("$file")  # Add unique file path to array
              fi
            fi
          done
          echo "$changed_files"