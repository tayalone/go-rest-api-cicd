name: Go Unit Test

on:
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go get .

      # - name: List changed files
      #   run: |
      #     api_url=$(jq -r .pull_request.url $GITHUB_EVENT_PATH)
      #     changed_files=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $api_url/files | jq -r '.[].filename')
      #     echo "Changed files:"
      #     echo "$changed_files"

      - name: List changed files
        id: list_files
        run: |
          api_url=$(jq -r .pull_request.url $GITHUB_EVENT_PATH)
          changed_files=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $api_url/files | jq -r '.[].filename')
          echo "....."
          echo "$changed_files"
          echo "....."
          echo "::set-output name=files::$changed_files"
      
      # - name: Echo changed files
      #   run: |
      #     echo "Changed files: ${{ steps.list_files.outputs.files }}"    
    
      # - name: Filter Go test files
      #   id: filter_go_files
      #   run: |
      #     echo "::set-output name=files::$changed_files"
      #     go_files=$(echo "$changed_files" | grep -E '\.go$' | grep -v '_test\.go$' || true)
      #     if [ -z "$go_files" ]; then
      #       echo "No Go test files changed. Skipping unit tests."
      #       exit 0
      #     fi
      #     echo "::set-output name=go_files::$go_files"

      # - name: Echo final files to test
      #   run: |
      #     changed_files="${{ steps.list_files.outputs.files }}"
      #     go_files=$(echo "$changed_files" | grep -E '\.go$' | grep '_test\.go$' || true)
      #     if [ -z "$go_files" ]; then
      #       echo "No Go test files changed. Skipping unit tests."
      #       exit 0
      #     fi
      #     echo "::set-output name=go_files::$go_files"

      # - name: Build
      #   run: go build -v ./...

      # - name: Test with the Go CLI
      #   run: go test ./...